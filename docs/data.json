{
    "project": {
        "name": "wordpress-client",
        "description": "WordPress XML-RPC client.",
        "version": "0.2.0",
        "url": "https://github.com/potanin/node-wordpress-client",
        "logo": "http://media.usabilitydynamics.com/logo.png"
    },
    "files": {
        "lib\\common\\convertJS.js": {
            "name": "lib\\common\\convertJS.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib\\common\\convertXML.js": {
            "name": "lib\\common\\convertXML.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib\\common\\index.js": {
            "name": "lib\\common\\index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib\\wordpress-client.js": {
            "name": "lib\\wordpress-client.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {},
    "classitems": [
        {
            "file": "lib\\common\\convertJS.js",
            "line": 3,
            "is_constructor": 1,
            "source": "wordpress-rpc/lib/convertJS.js",
            "return": {
                "description": "",
                "type": "Convert"
            },
            "class": ""
        },
        {
            "file": "lib\\common\\convertXML.js",
            "line": 3,
            "is_constructor": 1,
            "source": "wordpress-rpc/lib/convertXML.js",
            "return": {
                "description": "",
                "type": "Convert"
            },
            "class": ""
        },
        {
            "file": "lib\\common\\index.js",
            "line": 4,
            "description": "Common Utility Methods",
            "class": ""
        },
        {
            "file": "lib\\common\\index.js",
            "line": 10,
            "description": "Check if Value is Numeric",
            "params": [
                {
                    "name": "input",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": ""
        },
        {
            "file": "lib\\common\\index.js",
            "line": 23,
            "source": "grunt-wordpress",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib\\common\\index.js",
            "line": 62,
            "source": "grunt-wordpress",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib\\common\\index.js",
            "line": 97,
            "source": "wordpress-rpc/xml-rpc.js",
            "params": [
                {
                    "name": "method",
                    "description": ""
                },
                {
                    "name": "parameter",
                    "description": ""
                },
                {
                    "name": "callback",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": ""
        },
        {
            "file": "lib\\common\\index.js",
            "line": 133,
            "source": "wordpress-rpc/xml-rpc.js",
            "params": [
                {
                    "name": "xml",
                    "description": ""
                },
                {
                    "name": "callback",
                    "description": ""
                }
            ],
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 3,
            "description": "WordPress Client.",
            "todo": [
                "Add support for 30X redirect.\n\n### Events\n* ready          - Once client instance created.\n* connected      - Once client instance created and list of supported methods is returned.\n* authenticated  - Once client instance created and list of supported methods is returned.\n* error          - Emitted on any response error.\n\n### Settings\n* url            - URL to XML-RPC endpoint.\n* username       - Username to use.\n* password       - Password to use.\n* blog           - ID of blog\n* key            - As an alternative to usrname and password",
                "if WordPress site supports it.\n* methods        - Set with supported RPC methods once client connection is created."
            ],
            "params": [
                {
                    "name": "settings",
                    "description": ""
                },
                {
                    "name": "callback",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Client"
            },
            "is_constructor": 1,
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 78,
            "description": "Instance Properties.",
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 84,
            "description": "Callback for Connection Verification.",
            "todo": [
                "Does not verify credentials."
            ],
            "params": [
                {
                    "name": "error",
                    "description": ""
                },
                {
                    "name": "methods",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 114,
            "description": "Get Client Methods.",
            "params": [
                {
                    "name": "callback",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 130,
            "description": "Call Method",
            "todo": [
                "Add __queue use for request batching."
            ],
            "params": [
                {
                    "name": "method",
                    "description": ""
                },
                {
                    "name": "args",
                    "description": ""
                },
                {
                    "name": "callback",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 146,
            "description": "Handle RPC Method Callback.",
            "params": [
                {
                    "name": "error",
                    "description": ""
                },
                {
                    "name": "response",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 185,
            "description": "Multiple RPC Call",
            "params": [
                {
                    "name": "calls",
                    "description": ""
                },
                {
                    "name": "callback",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 202,
            "description": "Get Client Methods.\n\nSeems to fail completely when \"Name\" is nota  valid filename..?\n\n### Notes\n* Uses \"wp.uploadFile\" RPC EP.\n\n### Returns\n* id\n* file\n* url\n* type",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "name",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "type",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "bits",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "overwrite",
                            "description": "",
                            "type": "Boolean"
                        },
                        {
                            "name": "post_id",
                            "description": "Optional ID of parent post.",
                            "type": "Integer"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 230,
            "description": "Handle Upload Callback",
            "params": [
                {
                    "name": "error",
                    "description": ""
                },
                {
                    "name": "response",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 270,
            "description": "Insert / Update Post\n\nNatively:\n- Will return \"true\" if post has been updated.\n- Will return an error if post has NOT been updated, even if due to \"if_not_modified_since\".\n- Will return ID of new post if inserted.",
            "params": [
                {
                    "name": "data",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "ID",
                            "description": "If set, will attempt to edit.",
                            "type": "Integer"
                        },
                        {
                            "name": "type",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "bits",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "bits",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "overwrite",
                            "description": "",
                            "type": "Boolean"
                        }
                    ]
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 292,
            "description": "Handle Insertion Callback",
            "params": [
                {
                    "name": "error",
                    "description": ""
                },
                {
                    "name": "response",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 344,
            "description": "Get Client Methods.",
            "params": [
                {
                    "name": "attachment_id",
                    "description": ""
                },
                {
                    "name": "callback",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 363,
            "description": "Get Client Methods.",
            "params": [
                {
                    "name": "filter",
                    "description": ""
                },
                {
                    "name": "callback",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 380,
            "description": "Get Client Methods.",
            "params": [
                {
                    "name": "callback",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 396,
            "description": "Call Method on Next Tick.",
            "params": [
                {
                    "name": "callback",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 440,
            "description": "Constructor Properties.",
            "class": ""
        },
        {
            "file": "lib\\wordpress-client.js",
            "line": 471,
            "description": "Create Client",
            "params": [
                {
                    "name": "settings",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Client"
            },
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: source",
            "line": " lib\\common\\convertJS.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\common\\convertJS.js:3"
        },
        {
            "message": "unknown tag: source",
            "line": " lib\\common\\convertXML.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\common\\convertXML.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\common\\index.js:10"
        },
        {
            "message": "unknown tag: source",
            "line": " lib\\common\\index.js:23"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\common\\index.js:23"
        },
        {
            "message": "unknown tag: source",
            "line": " lib\\common\\index.js:62"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\common\\index.js:62"
        },
        {
            "message": "unknown tag: source",
            "line": " lib\\common\\index.js:97"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\common\\index.js:97"
        },
        {
            "message": "unknown tag: source",
            "line": " lib\\common\\index.js:133"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\wordpress-client.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\wordpress-client.js:84"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\wordpress-client.js:114"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\wordpress-client.js:130"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\wordpress-client.js:146"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\wordpress-client.js:185"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\wordpress-client.js:202"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\wordpress-client.js:230"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\wordpress-client.js:270"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\wordpress-client.js:292"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\wordpress-client.js:344"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\wordpress-client.js:363"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\wordpress-client.js:380"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\wordpress-client.js:396"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " lib\\wordpress-client.js:471"
        },
        {
            "message": "Missing item type",
            "line": " lib\\common\\convertJS.js:3"
        },
        {
            "message": "Missing item type",
            "line": " lib\\common\\convertXML.js:3"
        },
        {
            "message": "Missing item type\nCommon Utility Methods",
            "line": " lib\\common\\index.js:4"
        },
        {
            "message": "Missing item type\nCheck if Value is Numeric",
            "line": " lib\\common\\index.js:10"
        },
        {
            "message": "Missing item type",
            "line": " lib\\common\\index.js:23"
        },
        {
            "message": "Missing item type",
            "line": " lib\\common\\index.js:62"
        },
        {
            "message": "Missing item type",
            "line": " lib\\common\\index.js:97"
        },
        {
            "message": "Missing item type",
            "line": " lib\\common\\index.js:133"
        },
        {
            "message": "Missing item type\nWordPress Client.",
            "line": " lib\\wordpress-client.js:3"
        },
        {
            "message": "Missing item type\nInstance Properties.",
            "line": " lib\\wordpress-client.js:78"
        },
        {
            "message": "Missing item type\nCallback for Connection Verification.",
            "line": " lib\\wordpress-client.js:84"
        },
        {
            "message": "Missing item type\nGet Client Methods.",
            "line": " lib\\wordpress-client.js:114"
        },
        {
            "message": "Missing item type\nCall Method",
            "line": " lib\\wordpress-client.js:130"
        },
        {
            "message": "Missing item type\nHandle RPC Method Callback.",
            "line": " lib\\wordpress-client.js:146"
        },
        {
            "message": "Missing item type\nMultiple RPC Call",
            "line": " lib\\wordpress-client.js:185"
        },
        {
            "message": "Missing item type\nGet Client Methods.\n\nSeems to fail completely when \"Name\" is nota  valid filename..?\n\n### Notes\n* Uses \"wp.uploadFile\" RPC EP.\n\n### Returns\n* id\n* file\n* url\n* type",
            "line": " lib\\wordpress-client.js:202"
        },
        {
            "message": "Missing item type\nHandle Upload Callback",
            "line": " lib\\wordpress-client.js:230"
        },
        {
            "message": "Missing item type\nInsert / Update Post\n\nNatively:\n- Will return \"true\" if post has been updated.\n- Will return an error if post has NOT been updated, even if due to \"if_not_modified_since\".\n- Will return ID of new post if inserted.",
            "line": " lib\\wordpress-client.js:270"
        },
        {
            "message": "Missing item type\nHandle Insertion Callback",
            "line": " lib\\wordpress-client.js:292"
        },
        {
            "message": "Missing item type\nGet Client Methods.",
            "line": " lib\\wordpress-client.js:344"
        },
        {
            "message": "Missing item type\nGet Client Methods.",
            "line": " lib\\wordpress-client.js:363"
        },
        {
            "message": "Missing item type\nGet Client Methods.",
            "line": " lib\\wordpress-client.js:380"
        },
        {
            "message": "Missing item type\nCall Method on Next Tick.",
            "line": " lib\\wordpress-client.js:396"
        },
        {
            "message": "Missing item type\nConstructor Properties.",
            "line": " lib\\wordpress-client.js:440"
        },
        {
            "message": "Missing item type\nCreate Client",
            "line": " lib\\wordpress-client.js:471"
        }
    ]
}